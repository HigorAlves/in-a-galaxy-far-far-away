{"version":3,"sources":["Assets/Theme/Colors.ts","Assets/Theme/GlobalStyle.tsx","Services/StarWarsAPI.ts","Store/index.tsx","Components/Card/styles.tsx","Components/Card/index.tsx","Components/Header/styles.tsx","Components/Header/index.tsx","Components/Input/styles.tsx","Components/Input/index.tsx","Components/Loading/index.tsx","Pages/style.tsx","Pages/index.tsx","App.tsx","serviceWorker.ts","index.tsx","Assets/Images/stars.png","Assets/Images/example.jpeg"],"names":["Colors","background","font","backgroundSecondary","red","yellow","white","GlobalStyle","createGlobalStyle","Color","BgImage","http","Axios","create","baseURL","timeout","getShips","a","hasNext","page","ships","get","then","result","data","next","results","map","ship","consumables","split","time","parseInt","MGLT","push","mglt","name","ShipsProvider","children","useState","setShips","load","useEffect","ShipsContext","Provider","value","React","createContext","Card","styled","div","Image","img","VerticalDivider","Title","h3","InfoContainer","Text","p","HorizontalDivider","CardComponent","props","src","require","alt","stops","Container","header","Header","href","target","section","Input","input","InputComponent","type","min","placeholder","onChange","e","set","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","options","height","width","isStopped","isPaused","Home","useContext","setMglt","length","key","Math","floor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.63c46667.chunk.js","sourcesContent":["const Colors = {\n\tbackground: '#151515',\n\tfont: '#aaa',\n\tbackgroundSecondary: '#282727',\n\tred: '#9e4f60',\n\tyellow: '#FFE81F',\n\twhite: '#fff',\n};\n\nexport default Colors;\n","import { createGlobalStyle } from 'styled-components';\n\nimport BgImage from '../Images/stars.png';\nimport Color from './Colors';\n\nconst GlobalStyle = createGlobalStyle`\n\n\t* {\n  \tmargin: 0;\n  \tpadding: 0;\n\t\tfont-family: \"Raleway\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB',\n  'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n  'Segoe UI Emoji', 'Segoe UI Symbol';\n\t\tfont-variant-numeric: tabular-nums;\n\t}\n\n\tbody {\n\t\tbackground: ${Color.background} url(${BgImage}) no-repeat top right fixed;\n\t}\n\n\thtml {\n  \tfont-size: 16px;\n\t\tword-wrap: break-word;\n\t}\n\n\th1 {\n\t\tfont-size: 3rem;\n\t\tcolor: ${Color.white};\n\t\tfont-weight: bold;\n\t}\n\n\th2 {\n  \tfont-weight: 300;\n\t}\n\n\th3,\n\th4,\n\th5 {\n  \tfont-weight: 400;\n\t\tcolor: ${Color.white};\n\t}\n\n\tp{\n\t\tfont-weight: 300;\n\t\tcolor: ${Color.white};\n\t}\n\n\tsmall {\n\t\tcolor: ${Color.font};\n\t}\n\n\ta {\n\t\tappearance: none;\n\t\tcolor: ${Color.yellow};\n\t\ttext-decoration: none;\n\t}\n\n\tinput::-webkit-outer-spin-button,\n\tinput::-webkit-inner-spin-button {\n  \t-webkit-appearance: none;\n  \tmargin: 0;\n\t}\n\n\t/* Firefox */\n\tinput[type=number] {\n  \t-moz-appearance: textfield;\n\t}\n`;\n\nexport default GlobalStyle;\n","import Axios from 'axios';\n\nconst http = Axios.create({\n\tbaseURL: 'https://swapi.dev/api/starships/',\n\ttimeout: 6000,\n});\n\nconst getShips = async () => {\n\tlet hasNext = false;\n\tlet page = 1;\n\tconst ships: any[] = [];\n\n\tdo {\n\t\tawait http.get(`?page=${page}`).then((result) => {\n\t\t\tif (result.data.next) {\n\t\t\t\thasNext = true;\n\t\t\t\tpage++;\n\t\t\t} else {\n\t\t\t\thasNext = false;\n\t\t\t}\n\n\t\t\tresult.data.results.map((ship: any) => {\n\t\t\t\tconst consumables = ship.consumables.split(' ');\n\t\t\t\tlet time = 0;\n\n\t\t\t\tswitch (consumables[1]) {\n\t\t\t\tcase 'day':\n\t\t\t\t\tcase 'days':\n\t\t\t\t\ttime = parseInt(consumables[0]) * 24;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'week':\n\t\t\t\tcase 'weeks':\n\t\t\t\t\t\ttime = parseInt(consumables[0]) * 168;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\tcase 'months':\n\t\t\t\t\ttime = parseInt(consumables[0]) * 730;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\tcase 'years':\n\t\t\t\t\t\ttime = parseInt(consumables[0]) * 8760;\n\t\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ship.MGLT != 'unknown') {\n\t\t\t\t\tships.push({ mglt: ship.MGLT, consumables: time, name: ship.name });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t} while (hasNext);\n\n\treturn ships;\n};\n\nexport { getShips };\n","import React, { useState, useEffect } from 'react';\n\nimport { getShips } from 'Services/StarWarsAPI';\n\nconst Ships = [];\n\nconst ShipsProvider = ({ children }: { children: React.ReactNode }): React.ReactElement => {\n\tconst [ships, setShips] = useState([]);\n\n\tconst load = async () => {\n\t\tconst result: any = await getShips();\n\t\t// console.log(result);\n\t\tsetShips(result);\n\t};\n\tuseEffect(() => {\n\t\tload();\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\t//@ts-ignore\n\treturn <ShipsContext.Provider value={ships}>{children}</ShipsContext.Provider>;\n};\n\nconst ShipsContext = React.createContext(Ships);\n\nexport { ShipsContext, ShipsProvider };\n","import styled from 'styled-components';\n\nimport Colors from 'Assets/Theme/Colors';\n\nexport const Card = styled.div`\n\tbackground-color: ${Colors.backgroundSecondary};\n\twidth: 200px;\n\tborder-radius: 5px;\n\tborder-color: ${Colors.red};\n\tborder-width: 1px;\n\tborder-style: solid;\n\tmargin: 10px;\n`;\n\nexport const Image = styled.img`\n\twidth: 200px;\n\theight: 200px;\n\tmargin-top: 1.5px;\n`;\n\nexport const VerticalDivider = styled.div`\n\theight: 2px;\n\tbackground-color: ${Colors.red};\n\twidth: 200px;\n\tmargin-bottom: 5px;\n`;\n\nexport const Title = styled.h3`\n\tpadding: 5;\n\tfont-weight: bold;\n\ttext-align: center;\n`;\n\nexport const InfoContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmargin-top: 5px;\n\tpadding-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n\tpadding: 5px;\n\tfont-size: 1rem;\n`;\n\nexport const HorizontalDivider = styled.div`\n\theight: 28px;\n\tbackground-color: ${Colors.red};\n\twidth: 2px;\n\tmargin-bottom: 5px;\n`;\n","import React from 'react';\n\nimport { Card, Image, VerticalDivider, Title, InfoContainer, Text, HorizontalDivider } from './styles';\n\ninterface Props {\n\tname: string;\n\tmglt: number;\n\tstops: number;\n}\n\nconst CardComponent = (props: Props): React.ReactElement => (\n\t<Card>\n\t\t<Image src={require('../../Assets/Images/example.jpeg')} alt='Example Image' />\n\t\t<VerticalDivider />\n\t\t<Title>{props.name}</Title>\n\t\t<InfoContainer>\n\t\t\t<Text>MGLT: {props.mglt}</Text>\n\t\t\t<HorizontalDivider />\n\t\t\t<Text>Stops: {props.stops}</Text>\n\t\t</InfoContainer>\n\t</Card>\n);\n\nexport default CardComponent;\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n\ttext-align: center;\n\tmargin-top: 40px;\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst Header = (): React.ReactElement => (\n\t<Container>\n\t\t<h1>Star Wars: How many Stops</h1>\n\t\t<p>Find the better Spaceship for your travel!</p>\n\t\t<small>\n\t\t\tCreated by:\n\t\t\t<a href='https://github.com/higoralves/' target='blank'>\n\t\t\t\tHigor Alves\n\t\t\t</a>\n\t\t</small>\n\t</Container>\n);\n\nexport default Header;\n","import styled from 'styled-components';\n\nimport Colors from 'Assets/Theme/Colors';\n\nexport const Container = styled.section`\n\tmargin-top: 30px;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nexport const Input = styled.input`\n\toutline: none;\n\tappearance: none;\n\theight: 50px;\n\tfont-size: 1.5rem;\n\tborder-radius: 6px;\n\tborder-color: ${Colors.red};\n\tborder-width: 2;\n\tborder-style: solid;\n\tbackground-color: ${Colors.backgroundSecondary};\n\tcolor: ${Colors.font};\n\tpadding-left: 10px;\n`;\n","import React from 'react';\n\nimport { Container, Input } from './styles';\n\nconst InputComponent = (props: any): React.ReactElement => (\n\t<Container>\n\t\t<Input name='input' type='number' min='0' placeholder='How many MGLT?' onChange={(e) => props.set(e.target.value)} />\n\t</Container>\n);\n\nexport default InputComponent;\n","import React from 'react';\nimport Lottie from 'react-lottie';\n\nimport animationData from '../../Assets/animations/loading.json';\n\nconst defaultOptions = {\n\tloop: true,\n\tautoplay: true,\n\tanimationData: animationData,\n\trendererSettings: {\n\t\tpreserveAspectRatio: 'xMidYMid slice',\n\t},\n};\n\nconst Loading = () => <Lottie options={defaultOptions} height={400} width={400} isStopped={false} isPaused={false} />;\n\nexport default Loading;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n\tmargin-top: 40px;\n\tmargin-left: 20px;\n\tmargin-right: 20px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\tflex-wrap: wrap;\n`;\n","import React, { useContext, useState } from 'react';\n\nimport { ShipsContext } from 'Store';\n\nimport { Header, Input, Card, Loading } from 'Components';\n\nimport { Container } from './style';\n\nconst Home = (): React.ReactElement => {\n\tconst ships = useContext(ShipsContext);\n\tconst [mglt, setMglt] = useState(0);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Input value={0} set={setMglt} />\n\t\t\t{ships.length < 1 ? <Loading /> : null}\n\t\t\t<Container>\n\t\t\t\t{ships.length > 1\n\t\t\t\t\t? ships.map((ship: any) => {\n\t\t\t\t\t\t\tconst stops = mglt / (ship.mglt * ship.consumables);\n\t\t\t\t\t\t\treturn <Card key={ship.name} name={ship.name} mglt={ship.mglt} stops={Math.floor(stops)} />;\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { ShipsProvider } from 'Store';\n\nimport Page from 'Pages';\n\nconst App = (): React.ReactElement => (\n\t<ShipsProvider>\n\t\t<Page />\n\t</ShipsProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Theme from 'Assets/Theme/GlobalStyle';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Theme />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/stars.6494ab5b.png\";","module.exports = __webpack_public_path__ + \"static/media/example.06f9b6b5.jpeg\";"],"sourceRoot":""}